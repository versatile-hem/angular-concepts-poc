{"ast":null,"code":"import { gql } from '@apollo/client'; // Import the gql function from the @apollo/client package\nimport { Apollo } from 'apollo-angular'; // Import the Apollo class from the 'apollo-angular' package\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"apollo-angular\";\nconst SEARCH_CLIENTS = gql`\nquery SearchClientv2($size: Int!, $page: Int!) {\n  searchClientv2(input: { size: $size, page: $page, searchParam: { name: \"\" } }) {\n      page\n      size\n      clients {\n          name\n          description\n          address\n          email\n          contactPersonName\n          type\n      }\n  }\n}\n`;\nexport let GraphqlIntegrationComponent = /*#__PURE__*/(() => {\n  class GraphqlIntegrationComponent {\n    constructor(apollo) {\n      this.apollo = apollo;\n      this.length = 100;\n      this.pageSize = 10;\n      this.pageIndex = 0;\n      this.pageSizeOptions = [5, 10, 25];\n      this.hidePageSize = false;\n      this.showPageSizeOptions = true;\n      this.showFirstLastButtons = true;\n      this.disabled = false;\n      this.pageEvent = new PageEvent();\n    }\n    ngOnInit() {\n      const cliQuery = this.apollo.watchQuery({\n        query: SEARCH_CLIENTS,\n        variables: {\n          size: 5,\n          page: 0,\n          searchParam: {\n            name: \"\"\n          }\n        }\n      }).valueChanges.subscribe(result => {\n        this.clientInformation = result.data;\n        this.pageSize = this.clientInformation.searchClientv2.pageSize;\n        this.length = this.clientInformation.searchClientv2.size;\n      });\n    }\n    handlePageEvent(e) {\n      this.pageEvent = e;\n      this.length = e.length;\n      this.pageSize = e.pageSize;\n      this.pageIndex = e.pageIndex;\n      this.searchClient(this.pageSize, this.pageIndex);\n    }\n    setPageSizeOptions(setPageSizeOptionsInput) {\n      if (setPageSizeOptionsInput) {\n        this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n        this.searchClient(this.pageSizeOptions.length, this.pageIndex);\n      }\n    }\n    searchClient(totalcount, pageNumber) {\n      const cliQuery = this.apollo.watchQuery({\n        query: SEARCH_CLIENTS,\n        variables: {\n          size: totalcount,\n          page: pageNumber,\n          searchParam: {\n            name: \"\"\n          }\n        }\n      }).refetch().then(result => {\n        this.clientInformation = result.data;\n        this.pageSize = this.clientInformation.searchClientv2.pageSize;\n        this.length = this.clientInformation.searchClientv2.size;\n        ;\n      });\n    }\n    static #_ = this.ɵfac = function GraphqlIntegrationComponent_Factory(t) {\n      return new (t || GraphqlIntegrationComponent)(i0.ɵɵdirectiveInject(i1.Apollo));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GraphqlIntegrationComponent,\n      selectors: [[\"app-graphql-integration\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      template: function GraphqlIntegrationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtext(0, \"./graphql-integration.component.html\");\n        }\n      },\n      dependencies: [MatPaginatorModule]\n    });\n  }\n  return GraphqlIntegrationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}